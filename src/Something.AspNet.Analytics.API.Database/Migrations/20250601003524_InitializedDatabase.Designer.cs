// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Something.AspNet.Analytics.API.Database;

#nullable disable

namespace Something.AspNet.Analytics.API.Database.Migrations;

[DbContext(typeof(ApplicationDbContext))]
[Migration("20250601003524_InitializedDatabase")]
partial class InitializedDatabase
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.5")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("Something.AspNet.Analytics.API.Database.Models.OutboxEvent", b =>
            {
                b.Property<Guid>("Id")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.ToTable("OutboxEvents");
            });

        modelBuilder.Entity("Something.AspNet.Analytics.API.Database.Models.SessionUpdate", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("SessionId")
                    .HasColumnType("uniqueidentifier");

                b.Property<int>("Type")
                    .HasColumnType("int");

                b.Property<DateTimeOffset>("UpdatedAt")
                    .HasColumnType("datetimeoffset");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("SessionId");

                b.HasIndex("UserId");

                b.ToTable("SessionsUpdates");
            });
#pragma warning restore 612, 618
    }
}
